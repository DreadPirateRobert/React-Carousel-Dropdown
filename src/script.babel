var ReactCSSTransitionGroup = React.addons.CSSTransitionGroup;

class LoginForm extends React.Component {
  
  // Using a class based component here because we're accessing DOM refs
 
  handleSignIn(e) {
    e.preventDefault()
    let username = this.refs.username.value
    let password = this.refs.password.value
    this.props.onSignIn(username, password)
  }
  
  render() {
    return (
      <form onSubmit={this.handleSignIn.bind(this)}>
        <h3>Sign in</h3>
        <input type="text" ref="username" placeholder="enter you username" />
        <input type="password" ref="password" placeholder="enter password" />
        <input type="submit" value="Login" />
      </form>
    )
  }

}

class DefaultApp extends React.Component {
  constructor(props) {
    super(props);
    this.state = { 
      user: {
        username: null,
        password: null,
      }
    };
  }
  
  // App "actions" (functions that modify state)
  signIn(username, password) {
    // This is where you would call Firebase, an API etc...
    // calling setState will re-render the entire app (efficiently!)
    this.setState({
      user: {
        username,
        password,
      }
    })
  }
  
  signOut() {
    // clear out user from state
    this.setState({user: null})
  }
  
  
  render() {
    return (
      <div>
        <h1>My cool App</h1>
        { 
          (this.state.user.username == "shaadi" && this.state.user.password == "123") ? (
            <div>
              <App />
            </div>
          ):
            <LoginForm 
             onSignIn={this.signIn.bind(this)} 
            />
        }
      </div>
    )
  }
}

const Modal = ({ handleClose, show, children }) => {
  const showHideClassName = show ? 'modal display-block' : 'modal display-none';

  return (
    <div className={showHideClassName}>
      <section className='modal-main'>
        {children}
        <button
          onClick={handleClose}
        >
          Close
        </button>
      </section>
    </div>
  );
};


class ModalIndex extends React.Component {
  constructor(props) {
    super(props);
  }
  
  state = { show: false }

  showModal = () => {
    this.setState({ show: true });
  }
  
  hideModal = () => {
    this.setState({ show: false });
  }
    
  render() {
    
    let items = this.props.optionselected.map( (el, index) => {
      return (
        <li key={index}>
          {this.props.optionselected[index]}
        </li>
      )
    });
    
    return (
      <main>
        <h1>Open Modal</h1>
        <Modal show={this.state.show} handleClose={this.hideModal} >
          <p>Selected Tiles List</p>
          <ul> {items} </ul>
        </Modal>
        <button type='button' onClick={this.showModal}>Finish</button>
      </main>
    )
  }
}

class DropDownIndex extends React.Component {
  constructor(props) {
    super(props);
    this.state = { 
      dropdown: [ 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],
      mxlength:-1
    };
  }
  
  render() {
    let items = this.state.dropdown.map( (el, index) => {
      
      return (
        <option value={index} onClick={ () => this.props.changeCurrent(index) }>
          {index + 1}
        </option>
      )
    });
    
    return (
      <select>
        <option value="select"> Select Slides !</option>
         {items}
      </select>
    )
  }
}

class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = { 
      items: [
        'https://d2lm6fxwu08ot6.cloudfront.net/img-thumbs/960w/HA1RQCRQJ7.jpg',
        'https://d2lm6fxwu08ot6.cloudfront.net/img-thumbs/960w/EVHXF4MUT6.jpg',
        'https://d2lm6fxwu08ot6.cloudfront.net/img-thumbs/960w/D7VE3SK3RD.jpg',
        'https://d2lm6fxwu08ot6.cloudfront.net/img-thumbs/960w/0XRFUE80AZ.jpg',
        'https://d2lm6fxwu08ot6.cloudfront.net/img-thumbs/960w/2DQJJ9RLVD.jpg',
        'https://d2lm6fxwu08ot6.cloudfront.net/img-thumbs/960w/HA1RQCRQJ7.jpg',
        'https://d2lm6fxwu08ot6.cloudfront.net/img-thumbs/960w/EVHXF4MUT6.jpg',
        'https://d2lm6fxwu08ot6.cloudfront.net/img-thumbs/960w/D7VE3SK3RD.jpg',
        'https://d2lm6fxwu08ot6.cloudfront.net/img-thumbs/960w/0XRFUE80AZ.jpg',
        'https://d2lm6fxwu08ot6.cloudfront.net/img-thumbs/960w/2DQJJ9RLVD.jpg',
        'https://d2lm6fxwu08ot6.cloudfront.net/img-thumbs/960w/HA1RQCRQJ7.jpg',
        'https://d2lm6fxwu08ot6.cloudfront.net/img-thumbs/960w/EVHXF4MUT6.jpg',
        'https://d2lm6fxwu08ot6.cloudfront.net/img-thumbs/960w/D7VE3SK3RD.jpg',
        'https://d2lm6fxwu08ot6.cloudfront.net/img-thumbs/960w/0XRFUE80AZ.jpg',
        'https://d2lm6fxwu08ot6.cloudfront.net/img-thumbs/960w/2DQJJ9RLVD.jpg',
        'https://d2lm6fxwu08ot6.cloudfront.net/img-thumbs/960w/HA1RQCRQJ7.jpg',
        'https://d2lm6fxwu08ot6.cloudfront.net/img-thumbs/960w/EVHXF4MUT6.jpg',
        'https://d2lm6fxwu08ot6.cloudfront.net/img-thumbs/960w/D7VE3SK3RD.jpg',
        'https://d2lm6fxwu08ot6.cloudfront.net/img-thumbs/960w/0XRFUE80AZ.jpg',
        'https://d2lm6fxwu08ot6.cloudfront.net/img-thumbs/960w/2DQJJ9RLVD.jpg'
      ], 
      alnum: [
        'FIRST','SECOND','THIRD','FORTH','FIFTH','SIXTH','SEVENTH','EIGHT','NINE','TEN','ELEVEN', 'TWELVE', 'THIRTEEN',
        'FOURTEEN','FIFTHTEEN','SIXTEEN','SEVENTEEN','EIGHTEEN','NINETEEN','TWENTY'
      ],
      current: -1, 
      isNext: true,
      mxindex: -1,
      optionselected: []
    };
    
    this.handlerPrev = this.handlerPrev.bind(this);
    this.handlerNext = this.handlerNext.bind(this);
    this.goToHistoryClick = this.goToHistoryClick.bind(this);
    this.changeCurrentIndex = this.changeCurrentIndex.bind(this);
  }
  
  handlerPrev() {
    let index = this.state.current,
        length = this.state.mxindex;
    
    if( index < 1 ) {
      index = length+1;
    }
    
    index = index - 1;
  
    this.setState({
      current: index,
      isNext: false
    });
  }
  
  handlerNext() {
    let index = this.state.current,
        length = this.state.mxindex ;
    
    if( index == length ) {
      index = -1;
    }
    
    if(length != -1){
      index = index + 1;
    }
    
    this.setState({
      current: index,
      isNext: true
    });
  }
  
  goToHistoryClick( curIndex, index ) {
    let next = (curIndex < index);
    this.setState({
      current: index,
      isNext: next
    });                 
  }
  
  changeCurrentIndex( mxindex ) {
    
    this.setState({
      current: 0,
      isNext: true,
      mxindex: mxindex,
      optionselected:[...this.state.optionselected, mxindex+1]
    });                 
  }
  
  render(){
    let index = this.state.current,
        isnext = this.state.isNext,
        src = this.state.items[index];
  
    return (
      <div className="app">
        <DropDownIndex 
          changeCurrent={this.changeCurrentIndex}  
        />
        
        <div className="carousel">
         <ReactCSSTransitionGroup
            transitionName={{
            enter: isnext ? 'enter-next' : 'enter-prev',
            enterActive: 'enter-active',
            leave: 'leave',
            leaveActive: isnext ? 'leave-active-next' : 'leave-active-prev'
          }}
           >
             <div className="carousel_slide" key={index}>
               <img src={src} />
                <div className="centered">{this.state.alnum[index] }</div>
                  
                
             </div>
           </ReactCSSTransitionGroup>
           <button className="carousel_control carousel_control__prev" onClick={this.handlerPrev}><span></span></button>
           <button className="carousel_control carousel_control__next" onClick={this.handlerNext}><span></span></button>
          <div className="carousel_history">
          </div>         
          </div>
        <ModalIndex 
          optionselected={this.state.optionselected} 
         />
      </div>
    )
  }
}

class History extends React.Component {
  constructor(props) {
    super(props);
  }
  
  render() {
    let current = this.props.current;
    let items = this.props.items.map( (el, index) => {
      let name = (index == current) ? 'active' : '';
      return (
        <li key={index}>
          <button 
            className={name} 
            onClick={ () => this.props.changeSilde(current, index) }
          ></button>
        </li>
      )
    });
    
    return (
      <ul>{items}</ul>
    )
  }
}

ReactDOM.render( <DefaultApp />, document.getElementById("root"));
